# Generated by Django 4.1.3 on 2022-11-30 12:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=225)),
                ('date', models.DateField()),
                ('is_paid', models.BooleanField(default=False)),
                ('session_type', models.CharField(choices=[('individual', 'Individual'), ('group', 'Group')], default='individual', max_length=10)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments_client', to=settings.AUTH_USER_MODEL)),
                ('counsellor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments_counsellor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(choices=[('mon', 'Monday'), ('tue', 'Tuesday'), ('wed', 'Wednesday'), ('fri', 'Friday'), ('sat', 'Saturday'), ('sun', 'Sunday')], max_length=3, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=225, unique=True)),
                ('price', models.PositiveIntegerField()),
                ('price_on_holidays', models.PositiveIntegerField(blank=True)),
                ('category', models.CharField(choices=[('regular', 'Regular'), ('pack', 'Pack')], max_length=225)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=5)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('available_days', models.ManyToManyField(to='home.day')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServicePack',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('no_of_members', models.PositiveIntegerField(default=1)),
                ('no_grp_session', models.PositiveIntegerField(default=0)),
                ('no_ind_session', models.PositiveIntegerField(default=1)),
                ('is_paid', models.BooleanField(default=False)),
                ('appointments', models.ManyToManyField(to='home.appointment')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_pack_client', to=settings.AUTH_USER_MODEL)),
                ('counsellor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_pack_counsellor', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.service')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='slot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.slot'),
        ),
    ]
